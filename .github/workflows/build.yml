name: build

on:
   push:
      branches:
         - master
         - release/*

jobs:
   build:
      strategy:
         matrix:
            os: [macOS-latest, windows-latest, ubuntu-latest]

      runs-on: ${{matrix.os}}

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v2
            with:
               fetch-depth: 0

         -  name: Run ubuntu tests
            if: matrix.os == 'ubuntu-latest'
            run: ./gradlew check

         -  name: Run windows tests
            if: matrix.os == 'windows-latest'
            run: ./gradlew mingwX64Test

         -  name: Run macOS tests
            if: matrix.os == 'macOS-latest'
            run: ./gradlew macosX64Test

         -  name: Run tvosX64 tests
            if: matrix.os == 'macOS-latest'
            run: ./gradlew tvosX64Test

         -  name: Run watchosX86 tests
            if: matrix.os == 'macOS-latest'
            run: ./gradlew watchosX86Test

         -  name: Run iosX64 tests
            if: matrix.os == 'macOS-latest'
            run: ./gradlew iosX64Test

         -  name: Bundle the build report
            if: failure()
            run: find . -type d -name 'reports' | zip -@ -r build-reports.zip

         -  name: Upload the build report
            if: failure()
            uses: actions/upload-artifact@master
            with:
               name: error-report
               path: build-reports.zip

   deploy-linux-and-common:
      needs: build
      runs-on: ubuntu-latest

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v2
            with:
               fetch-depth: 0

         -  name: publish linux and common snapshots
            run: ./gradlew publish
            env:
               OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
               OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
               ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
               ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}

   deploy-mac:
      needs: build
      runs-on: macOS-latest

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v2
            with:
               fetch-depth: 0

         -  name: publish macosx64 snapshot
            run: ./gradlew publishMacosX64PublicationToDeployRepository
            env:
               OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
               OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
               ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
               ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}

         -  name: publish tvosX64 snapshot
            run: ./gradlew publishTvosX64PublicationToDeployRepository
            env:
               OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
               OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
               ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
               ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}

         -  name: publish watchosX64 snapshot
            run: ./gradlew publishWatchosX64PublicationToDeployRepository
            env:
               OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
               OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
               ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
               ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}

         -  name: publish iosX64 snapshot
            run: ./gradlew publishIosX64PublicationToDeployRepository
            env:
               OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
               OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
               ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
               ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}

   deploy-windows:
      needs: build
      runs-on: windows-latest

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v2
            with:
               fetch-depth: 0

         -  name: publish mingw64 snapshot
            run: ./gradlew publishMingwX64PublicationToDeployRepository
            env:
               OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
               OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
               ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
               ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}

env:
   GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
